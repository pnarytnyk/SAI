<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="saiswitchextensions_8h" kind="file" language="C++">
    <compoundname>saiswitchextensions.h</compoundname>
    <includes refid="saiswitch_8h" local="no">saiswitch.h</includes>
    <includes refid="saitypesextensions_8h" local="no">saitypesextensions.h</includes>
    <includedby refid="saiextensions_8h" local="yes">/home/pnarytnyk/Documents/SAI/experimental/saiextensions.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h</label>
        <link refid="saiswitchextensions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>saitypesextensions.h</label>
        <link refid="saitypesextensions_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>saiswitch.h</label>
        <link refid="saiswitch_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>saitypes.h</label>
        <link refid="saitypes_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>sys/types.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/pnarytnyk/Documents/SAI/experimental/saiextensions.h</label>
        <link refid="saiextensions_8h"/>
      </node>
      <node id="1">
        <label>/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h</label>
        <link refid="saiswitchextensions_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__sai__ha__set__event__data__t" prot="public">_sai_ha_set_event_data_t</innerclass>
    <innerclass refid="struct__sai__ha__scope__event__data__t" prot="public">_sai_ha_scope_event_data_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="saiswitchextensions_8h_1a82b7c380e22ccc89b98a1286839957bd" prot="public" static="no" strong="no">
        <type></type>
        <name>_sai_dash_caps_ha_scope_level_t</name>
        <enumvalue id="saiswitchextensions_8h_1a82b7c380e22ccc89b98a1286839957bda9c9283279989ae814358f70eea994859" prot="public">
          <name>SAI_DASH_CAPS_HA_SCOPE_LEVEL_CARD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Card level HA scope </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="saiswitchextensions_8h_1a82b7c380e22ccc89b98a1286839957bdac6b60805346db37bad315b7510c9d057" prot="public">
          <name>SAI_DASH_CAPS_HA_SCOPE_LEVEL_ENI</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>ENI level HA scope </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>DASH capability HA scope level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="34" column="1" bodyfile="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="saiswitchextensions_8h_1ac3beb8c78673102db39d85715ce2396f" prot="public" static="no" strong="no">
        <type></type>
        <name>_sai_ha_set_event_t</name>
        <enumvalue id="saiswitchextensions_8h_1ac3beb8c78673102db39d85715ce2396faccf3f328144695b08d33c18baf965fde" prot="public">
          <name>SAI_HA_SET_EVENT_DP_CHANNEL_UP</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Data plane channel goes up. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="saiswitchextensions_8h_1ac3beb8c78673102db39d85715ce2396fa62fce2271a8ee04c22361996401ef57a" prot="public">
          <name>SAI_HA_SET_EVENT_DP_CHANNEL_DOWN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Data plane channel goes down. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>HA set event type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="46" column="1" bodyfile="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="enum" id="saiswitchextensions_8h_1a192920200904f2ebf0425070a67d2391" prot="public" static="no" strong="no">
        <type></type>
        <name>_sai_ha_scope_event_t</name>
        <enumvalue id="saiswitchextensions_8h_1a192920200904f2ebf0425070a67d2391a6ea76f34bab3669f15496d891b07591e" prot="public">
          <name>SAI_HA_SCOPE_EVENT_STATE_CHANGED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>HA scope state changed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="saiswitchextensions_8h_1a192920200904f2ebf0425070a67d2391acf91c637deaaa2609379909fcfd2086e" prot="public">
          <name>SAI_HA_SCOPE_EVENT_FLOW_RECONCILE_NEEDED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Flow reconcile is needed </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="saiswitchextensions_8h_1a192920200904f2ebf0425070a67d2391adfbdc1695f4287207fcfcc773464f279" prot="public">
          <name>SAI_HA_SCOPE_EVENT_SPLIT_BRAIN_DETECTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>DPU driven HA split brain detected </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>HA scope event type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="86" column="1" bodyfile="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" bodystart="87" bodyend="96"/>
      </memberdef>
      <memberdef kind="enum" id="saiswitchextensions_8h_1a861eed4552e48c79e500d4fc9c24a595" prot="public" static="no" strong="no">
        <type></type>
        <name>_sai_switch_attr_extensions_t</name>
        <enumvalue id="saiswitchextensions_8h_1a861eed4552e48c79e500d4fc9c24a595a7db9bde1bf406c57edba7112f3f52846" prot="public">
          <name>SAI_SWITCH_ATTR_EXTENSIONS_RANGE_START</name>
          <initializer>= SAI_SWITCH_ATTR_EXTENSIONS_RANGE_BASE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="saiswitchextensions_8h_1a861eed4552e48c79e500d4fc9c24a595a77fc992196a9e353fee284bf97479f69" prot="public">
          <name>SAI_SWITCH_ATTR_DASH_CAPS_MAX_METER_BUCKET_COUNT_PER_ENI</name>
          <initializer>= SAI_SWITCH_ATTR_EXTENSIONS_RANGE_START</initializer>
          <briefdescription>
<para>Maximum number of meter buckets per ENI. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_uint32_t </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           READ_ONLY </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="saiswitchextensions_8h_1a861eed4552e48c79e500d4fc9c24a595a8af8f1821a8d9fab32d90434da888b93" prot="public">
          <name>SAI_SWITCH_ATTR_DASH_CAPS_HA_SCOPE_LEVEL</name>
          <briefdescription>
<para>DASH capability HA scope level. </para>
          </briefdescription>
          <detaileddescription>
<para>It indicates on which level HA scope can be supported, such as ENI or Card.</para>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_dash_caps_ha_scope_level_t </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           READ_ONLY </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="saiswitchextensions_8h_1a861eed4552e48c79e500d4fc9c24a595a0a1006f5e2e5b37293a33282f9ae23c7" prot="public">
          <name>SAI_SWITCH_ATTR_DASH_CAPS_HA_OWNER_NEEDED</name>
          <briefdescription>
<para>DASH capability HA owner needed. </para>
          </briefdescription>
          <detaileddescription>
<para>If true, the DASH host need to own driving the HA state machine, otherwise the DASH implementation can drive the HA state machine by itself.</para>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            bool </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           READ_ONLY </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="saiswitchextensions_8h_1a861eed4552e48c79e500d4fc9c24a595aa2bd5b52aec0eb98983414b9ad3712af" prot="public">
          <name>SAI_SWITCH_ATTR_HA_SET_EVENT_NOTIFY</name>
          <briefdescription>
<para>DASH HA set event notification. </para>
          </briefdescription>
          <detaileddescription>
<para>Use sai_ha_set_event_notification_fn as notification function.</para>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_pointer_t sai_ha_set_event_notification_fn </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           CREATE_AND_SET </para>
</simplesect>
<simplesect kind="par"><title>Default value:</title><para> @@default         NULL </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="saiswitchextensions_8h_1a861eed4552e48c79e500d4fc9c24a595a81cd2ced9ae02c174980599bc92c0676" prot="public">
          <name>SAI_SWITCH_ATTR_HA_SCOPE_EVENT_NOTIFY</name>
          <briefdescription>
<para>DASH HA set scope notification. </para>
          </briefdescription>
          <detaileddescription>
<para>Use sai_ha_scope_event_notification_fn as notification function.</para>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_pointer_t sai_ha_scope_event_notification_fn </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           CREATE_AND_SET </para>
</simplesect>
<simplesect kind="par"><title>Default value:</title><para> @@default         NULL </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="saiswitchextensions_8h_1a861eed4552e48c79e500d4fc9c24a595a24a1279cd77ab9c0cd2555a2c616bce4" prot="public">
          <name>SAI_SWITCH_ATTR_EXTENSIONS_RANGE_END</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>SAI switch attribute extensions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Flags:</title><para> @@flags           free </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="139" column="1" bodyfile="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" bodystart="140" bodyend="196"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="saiswitchextensions_8h_1a7ce778f764924ef37b8a84b1c63e8cca" prot="public" static="no">
        <type>enum <ref refid="saiswitchextensions_8h_1a82b7c380e22ccc89b98a1286839957bd" kindref="member">_sai_dash_caps_ha_scope_level_t</ref></type>
        <definition>typedef enum _sai_dash_caps_ha_scope_level_t sai_dash_caps_ha_scope_level_t</definition>
        <argsstring></argsstring>
        <name>sai_dash_caps_ha_scope_level_t</name>
        <briefdescription>
<para>DASH capability HA scope level. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="41" column="32"/>
      </memberdef>
      <memberdef kind="typedef" id="saiswitchextensions_8h_1a01b28439ea5e316e0ca9837bceb2a176" prot="public" static="no">
        <type>enum <ref refid="saiswitchextensions_8h_1ac3beb8c78673102db39d85715ce2396f" kindref="member">_sai_ha_set_event_t</ref></type>
        <definition>typedef enum _sai_ha_set_event_t sai_ha_set_event_t</definition>
        <argsstring></argsstring>
        <name>sai_ha_set_event_t</name>
        <briefdescription>
<para>HA set event type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="54" column="20"/>
      </memberdef>
      <memberdef kind="typedef" id="saiswitchextensions_8h_1a329deba3c86a0cb2c01cd04560cc82f7" prot="public" static="no">
        <type>struct <ref refid="struct__sai__ha__set__event__data__t" kindref="compound">_sai_ha_set_event_data_t</ref></type>
        <definition>typedef struct _sai_ha_set_event_data_t sai_ha_set_event_data_t</definition>
        <argsstring></argsstring>
        <name>sai_ha_set_event_data_t</name>
        <briefdescription>
<para>Notification data format received from SAI HA set callback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="67" column="25"/>
      </memberdef>
      <memberdef kind="typedef" id="saiswitchextensions_8h_1a2d5297cc6981103b4374573c1ead4e6d" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sai_ha_set_event_notification_fn) (_In_ uint32_t count, _In_ const sai_ha_set_event_data_t *data)</definition>
        <argsstring>)(_In_ uint32_t count, _In_ const sai_ha_set_event_data_t *data)</argsstring>
        <name>sai_ha_set_event_notification_fn</name>
        <briefdescription>
<para>HA set event notification. </para>
        </briefdescription>
        <detaileddescription>
<para>Passed as a parameter into sai_initialize_switch()</para>
<para><simplesect kind="par"><title>Count:</title><para> @@count           data[count]</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of notifications </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of HA set events </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="79" column="9" bodyfile="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="saiswitchextensions_8h_1ac82248e1f392961ae8f55f2b41926793" prot="public" static="no">
        <type>enum <ref refid="saiswitchextensions_8h_1a192920200904f2ebf0425070a67d2391" kindref="member">_sai_ha_scope_event_t</ref></type>
        <definition>typedef enum _sai_ha_scope_event_t sai_ha_scope_event_t</definition>
        <argsstring></argsstring>
        <name>sai_ha_scope_event_t</name>
        <briefdescription>
<para>HA scope event type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="96" column="22"/>
      </memberdef>
      <memberdef kind="typedef" id="saiswitchextensions_8h_1a2ca8e32befa458c494ab2ae60b4ec78b" prot="public" static="no">
        <type>struct <ref refid="struct__sai__ha__scope__event__data__t" kindref="compound">_sai_ha_scope_event_data_t</ref></type>
        <definition>typedef struct _sai_ha_scope_event_data_t sai_ha_scope_event_data_t</definition>
        <argsstring></argsstring>
        <name>sai_ha_scope_event_data_t</name>
        <briefdescription>
<para>Notification data format received from SAI HA scope callback. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="118" column="27"/>
      </memberdef>
      <memberdef kind="typedef" id="saiswitchextensions_8h_1ad538c7495b98b2843ecb10d96ebf95b1" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* sai_ha_scope_event_notification_fn) (_In_ uint32_t count, _In_ const sai_ha_scope_event_data_t *data)</definition>
        <argsstring>)(_In_ uint32_t count, _In_ const sai_ha_scope_event_data_t *data)</argsstring>
        <name>sai_ha_scope_event_notification_fn</name>
        <briefdescription>
<para>HA scope event notification. </para>
        </briefdescription>
        <detaileddescription>
<para>Passed as a parameter into sai_initialize_switch()</para>
<para><simplesect kind="par"><title>Count:</title><para> @@count           data[count]</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of notifications </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of HA scope events </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="130" column="9" bodyfile="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="saiswitchextensions_8h_1ab63fbbbaec33ac7a49d282aeaa099b4e" prot="public" static="no">
        <type>enum <ref refid="saiswitchextensions_8h_1a861eed4552e48c79e500d4fc9c24a595" kindref="member">_sai_switch_attr_extensions_t</ref></type>
        <definition>typedef enum _sai_switch_attr_extensions_t sai_switch_attr_extensions_t</definition>
        <argsstring></argsstring>
        <name>sai_switch_attr_extensions_t</name>
        <briefdescription>
<para>SAI switch attribute extensions. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title>Flags:</title><para> @@flags           free </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h" line="196" column="30"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This module defines switch extensions of the Switch Abstraction Interface (SAI) </para>
    </briefdescription>
    <detaileddescription>
<para>Copyright (c) 2018 Microsoft Open Technologies, Inc.</para>
<para>Licensed under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at <ulink url="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</ulink></para>
<para>THIS CODE IS PROVIDED ON AN <emphasis>AS IS</emphasis> BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABILITY OR NON-INFRINGEMENT.</para>
<para>See the Apache Version 2.0 License for specific language governing permissions and limitations under the License.</para>
<para>Microsoft would like to thank the following companies for their review and assistance with these files: Intel Corporation, Mellanox Technologies Ltd, Dell Products, L.P., Facebook, Inc., Marvell International Ltd. </para>
    </detaileddescription>
    <location file="/home/pnarytnyk/Documents/SAI/experimental/saiswitchextensions.h"/>
  </compounddef>
</doxygen>
