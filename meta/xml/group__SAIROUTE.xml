<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="group__SAIROUTE" kind="group">
    <compoundname>SAIROUTE</compoundname>
    <title>SAI - Route specific API definitions</title>
    <innerclass refid="struct__sai__route__entry__t" prot="public">_sai_route_entry_t</innerclass>
    <innerclass refid="struct__sai__route__api__t" prot="public">_sai_route_api_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__SAIROUTE_1ga3c594db3cf069b24b966654ed0947712" prot="public" static="no" strong="no">
        <type></type>
        <name>_sai_route_entry_attr_t</name>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712ae65e49cc33abb46c2cb20ddf3f91959b" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_START</name>
          <briefdescription>
<para>Start of attributes. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712add13cefac0dab757b27b085bfde0c00f" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_PACKET_ACTION</name>
          <initializer>= SAI_ROUTE_ENTRY_ATTR_START</initializer>
          <briefdescription>
<para>Packet action. </para>
          </briefdescription>
          <detaileddescription>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_packet_action_t </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           CREATE_AND_SET </para>
</simplesect>
<simplesect kind="par"><title>Default value:</title><para> @@default         SAI_PACKET_ACTION_FORWARD </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712ae29d4c3b1a5b8b202618e76d2475267a" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_USER_TRAP_ID</name>
          <briefdescription>
<para>Generate User Defined Trap ID for trap/log actions. </para>
          </briefdescription>
          <detaileddescription>
<para>When it is SAI_NULL_OBJECT_ID, then packet will not be trapped.</para>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_object_id_t </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           CREATE_AND_SET </para>
</simplesect>
<simplesect kind="par"><title>Allowed object types</title><para> @@objects         SAI_OBJECT_TYPE_HOSTIF_USER_DEFINED_TRAP </para>
</simplesect>
<simplesect kind="par"><title>Allows NULL object ID</title><para> @@allownull       true </para>
</simplesect>
<simplesect kind="par"><title>Default value:</title><para> @@default         SAI_NULL_OBJECT_ID </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712ad57480d442547be7ed774bae14a16a53" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_NEXT_HOP_ID</name>
          <briefdescription>
<para>Next hop or next hop group id for the packet, or a router interface in case of directly reachable route, or the CPU port in case of IP2ME route. </para>
          </briefdescription>
          <detaileddescription>
<para>The next hop id is only effective when the packet action is one of the following: FORWARD, COPY, LOG, TRANSIT.</para>
<para>The next hop id can be a generic next hop object, such as next hop, next hop group. Directly reachable routes are the IP subnets that are directly attached to the router. For such routes, fill the router interface id to which the subnet is attached. IP2ME route adds a local router IP address. For such routes, fill the CPU port (<ref refid="group__SAISWITCH_1gga96df0871b3925f973f4a9079ffb3e634a55aefdaaa8394c330bbb579243b8b728" kindref="member">SAI_SWITCH_ATTR_CPU_PORT</ref>). When pointing to a next hop group which is empty, the effective routing action will be DROP.</para>
<para>When it is SAI_NULL_OBJECT_ID, then packet will be dropped.</para>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_object_id_t </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           CREATE_AND_SET </para>
</simplesect>
<simplesect kind="par"><title>Allowed object types</title><para> @@objects         SAI_OBJECT_TYPE_NEXT_HOP, SAI_OBJECT_TYPE_NEXT_HOP_GROUP, SAI_OBJECT_TYPE_ROUTER_INTERFACE, SAI_OBJECT_TYPE_PORT </para>
</simplesect>
<simplesect kind="par"><title>Allows NULL object ID</title><para> @@allownull       true </para>
</simplesect>
<simplesect kind="par"><title>Default value:</title><para> @@default         SAI_NULL_OBJECT_ID </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712acd36ac60ff8576aace6aa877c2ca8429" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_META_DATA</name>
          <briefdescription>
<para>User based Meta Data. </para>
          </briefdescription>
          <detaileddescription>
<para>Value Range <ref refid="group__SAISWITCH_1gga96df0871b3925f973f4a9079ffb3e634a3f147a371fb1c112a95c2e6db0589b50" kindref="member">SAI_SWITCH_ATTR_ROUTE_DST_USER_META_DATA_RANGE</ref></para>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_uint32_t </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           CREATE_AND_SET </para>
</simplesect>
<simplesect kind="par"><title>Default value:</title><para> @@default         0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712ae07df2d2c2feec2360e0e88512aff0b1" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_IP_ADDR_FAMILY</name>
          <briefdescription>
<para>Route entry IP address family. </para>
          </briefdescription>
          <detaileddescription>
<para>READ-ONLY</para>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_ip_addr_family_t </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           READ_ONLY </para>
</simplesect>
<simplesect kind="par"><title>IsResourceType:</title><para> @@isresourcetype  true </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712a809b732869a771189be98c7a5c961fb5" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_COUNTER_ID</name>
          <briefdescription>
<para>Attach a counter. </para>
          </briefdescription>
          <detaileddescription>
<para>When it is empty, then packet hits won&apos;t be counted</para>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_object_id_t </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           CREATE_AND_SET </para>
</simplesect>
<simplesect kind="par"><title>Allowed object types</title><para> @@objects         SAI_OBJECT_TYPE_COUNTER </para>
</simplesect>
<simplesect kind="par"><title>Allows NULL object ID</title><para> @@allownull       true </para>
</simplesect>
<simplesect kind="par"><title>Default value:</title><para> @@default         SAI_NULL_OBJECT_ID </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712a9524ee047dec18677c51077a267d9c61" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_PREFIX_AGG_ID</name>
          <briefdescription>
<para>Route Prefix Aggregation ID. </para>
          </briefdescription>
          <detaileddescription>
<para>Prefix aggregation ID is used for SRV6 VPN cases. When multiple prefixes use the same set of remote SRV6 Endpoint(s) but with different VPN SID values, prefix aggregation id allows SAI to derive different VPN SID while keeping using single destination (NH or Next hop group)</para>
<para><simplesect kind="par"><title>Value Type:</title><para> @@type            sai_uint32_t </para>
</simplesect>
<simplesect kind="par"><title>Flags:</title><para> @@flags           CREATE_AND_SET </para>
</simplesect>
<simplesect kind="par"><title>Default value:</title><para> @@default         0 </para>
</simplesect>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712a7a4499bd6fcf6372f672e3c625b55fd7" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_END</name>
          <briefdescription>
<para>End of attributes. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712aa57ca150d6589f259ccff0419f886e9b" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_CUSTOM_RANGE_START</name>
          <initializer>= 0x10000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Custom range base value </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__SAIROUTE_1gga3c594db3cf069b24b966654ed0947712ab5495206eed9163206133bf2235add81" prot="public">
          <name>SAI_ROUTE_ENTRY_ATTR_CUSTOM_RANGE_END</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>End of custom range base </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Attribute Id for SAI route object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="39" column="1" bodyfile="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" bodystart="40" bodyend="156"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__SAIROUTE_1gaec0ef7e6b3321be480f70672320194e2" prot="public" static="no">
        <type>enum <ref refid="group__SAIROUTE_1ga3c594db3cf069b24b966654ed0947712" kindref="member">_sai_route_entry_attr_t</ref></type>
        <definition>typedef enum _sai_route_entry_attr_t sai_route_entry_attr_t</definition>
        <argsstring></argsstring>
        <name>sai_route_entry_attr_t</name>
        <briefdescription>
<para>Attribute Id for SAI route object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="156" column="24"/>
      </memberdef>
      <memberdef kind="typedef" id="group__SAIROUTE_1gad7785666665f85551d3180b995e7461b" prot="public" static="no">
        <type>struct <ref refid="struct__sai__route__entry__t" kindref="compound">_sai_route_entry_t</ref></type>
        <definition>typedef struct _sai_route_entry_t sai_route_entry_t</definition>
        <argsstring></argsstring>
        <name>sai_route_entry_t</name>
        <briefdescription>
<para>Unicast route entry. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="182" column="19"/>
      </memberdef>
      <memberdef kind="typedef" id="group__SAIROUTE_1ga5dba12fb352d5df7a97b355838a64dc3" prot="public" static="no">
        <type>sai_status_t(*</type>
        <definition>typedef sai_status_t(* sai_create_route_entry_fn) (_In_ const sai_route_entry_t *route_entry, _In_ uint32_t attr_count, _In_ const sai_attribute_t *attr_list)</definition>
        <argsstring>)(_In_ const sai_route_entry_t *route_entry, _In_ uint32_t attr_count, _In_ const sai_attribute_t *attr_list)</argsstring>
        <name>sai_create_route_entry_fn</name>
        <briefdescription>
<para>Create Route. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: IP prefix/mask expected in Network Byte Order.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">route_entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Route entry </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of attributes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr_list</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of attributes</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__SAISTATUS_1gaccbc66056ee29d7f1dc8defdc314cc55" kindref="member">SAI_STATUS_SUCCESS</ref> on success, failure status code on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="195" column="9" bodyfile="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__SAIROUTE_1ga480a37fce392b1872da5e09b206ff0c5" prot="public" static="no">
        <type>sai_status_t(*</type>
        <definition>typedef sai_status_t(* sai_remove_route_entry_fn) (_In_ const sai_route_entry_t *route_entry)</definition>
        <argsstring>)(_In_ const sai_route_entry_t *route_entry)</argsstring>
        <name>sai_remove_route_entry_fn</name>
        <briefdescription>
<para>Remove Route. </para>
        </briefdescription>
        <detaileddescription>
<para>Note: IP prefix/mask expected in Network Byte Order.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">route_entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Route entry</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__SAISTATUS_1gaccbc66056ee29d7f1dc8defdc314cc55" kindref="member">SAI_STATUS_SUCCESS</ref> on success, failure status code on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="209" column="9" bodyfile="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__SAIROUTE_1ga4998aecda49966187d0badd1a5860793" prot="public" static="no">
        <type>sai_status_t(*</type>
        <definition>typedef sai_status_t(* sai_set_route_entry_attribute_fn) (_In_ const sai_route_entry_t *route_entry, _In_ const sai_attribute_t *attr)</definition>
        <argsstring>)(_In_ const sai_route_entry_t *route_entry, _In_ const sai_attribute_t *attr)</argsstring>
        <name>sai_set_route_entry_attribute_fn</name>
        <briefdescription>
<para>Set route attribute value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">route_entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Route entry </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__SAISTATUS_1gaccbc66056ee29d7f1dc8defdc314cc55" kindref="member">SAI_STATUS_SUCCESS</ref> on success, failure status code on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="220" column="9" bodyfile="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__SAIROUTE_1gae28e7ad532d020512bdddf73fdb77d55" prot="public" static="no">
        <type>sai_status_t(*</type>
        <definition>typedef sai_status_t(* sai_get_route_entry_attribute_fn) (_In_ const sai_route_entry_t *route_entry, _In_ uint32_t attr_count, _Inout_ sai_attribute_t *attr_list)</definition>
        <argsstring>)(_In_ const sai_route_entry_t *route_entry, _In_ uint32_t attr_count, _Inout_ sai_attribute_t *attr_list)</argsstring>
        <name>sai_get_route_entry_attribute_fn</name>
        <briefdescription>
<para>Get route attribute value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">route_entry</parametername>
</parameternamelist>
<parameterdescription>
<para>Route entry </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of attributes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">attr_list</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of attributes</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__SAISTATUS_1gaccbc66056ee29d7f1dc8defdc314cc55" kindref="member">SAI_STATUS_SUCCESS</ref> on success, failure status code on error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="233" column="9" bodyfile="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__SAIROUTE_1ga04f4d858e72c98b102de1f40a1861a37" prot="public" static="no">
        <type>sai_status_t(*</type>
        <definition>typedef sai_status_t(* sai_bulk_create_route_entry_fn) (_In_ uint32_t object_count, _In_ const sai_route_entry_t *route_entry, _In_ const uint32_t *attr_count, _In_ const sai_attribute_t **attr_list, _In_ sai_bulk_op_error_mode_t mode, _Out_ sai_status_t *object_statuses)</definition>
        <argsstring>)(_In_ uint32_t object_count, _In_ const sai_route_entry_t *route_entry, _In_ const uint32_t *attr_count, _In_ const sai_attribute_t **attr_list, _In_ sai_bulk_op_error_mode_t mode, _Out_ sai_status_t *object_statuses)</argsstring>
        <name>sai_bulk_create_route_entry_fn</name>
        <briefdescription>
<para>Bulk create route entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of objects to create </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">route_entry</parametername>
</parameternamelist>
<parameterdescription>
<para>List of object to create </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr_count</parametername>
</parameternamelist>
<parameterdescription>
<para>List of attr_count. Caller passes the number of attribute for each object to create. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr_list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of attributes for every object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk operation error handling mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">object_statuses</parametername>
</parameternamelist>
<parameterdescription>
<para>List of status for every object. Caller needs to allocate the buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__SAISTATUS_1gaccbc66056ee29d7f1dc8defdc314cc55" kindref="member">SAI_STATUS_SUCCESS</ref> on success when all objects are created or <ref refid="group__SAISTATUS_1ga033ca99724e17bca3e17f86df3f80490" kindref="member">SAI_STATUS_FAILURE</ref> when any of the objects fails to create. When there is failure, Caller is expected to go through the list of returned statuses to find out which fails and which succeeds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="255" column="9" bodyfile="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__SAIROUTE_1gaa6b1eac4218c14eec66efa2710e2fba7" prot="public" static="no">
        <type>sai_status_t(*</type>
        <definition>typedef sai_status_t(* sai_bulk_remove_route_entry_fn) (_In_ uint32_t object_count, _In_ const sai_route_entry_t *route_entry, _In_ sai_bulk_op_error_mode_t mode, _Out_ sai_status_t *object_statuses)</definition>
        <argsstring>)(_In_ uint32_t object_count, _In_ const sai_route_entry_t *route_entry, _In_ sai_bulk_op_error_mode_t mode, _Out_ sai_status_t *object_statuses)</argsstring>
        <name>sai_bulk_remove_route_entry_fn</name>
        <briefdescription>
<para>Bulk remove route entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of objects to remove </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">route_entry</parametername>
</parameternamelist>
<parameterdescription>
<para>List of objects to remove </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk operation error handling mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">object_statuses</parametername>
</parameternamelist>
<parameterdescription>
<para>List of status for every object. Caller needs to allocate the buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__SAISTATUS_1gaccbc66056ee29d7f1dc8defdc314cc55" kindref="member">SAI_STATUS_SUCCESS</ref> on success when all objects are removed or <ref refid="group__SAISTATUS_1ga033ca99724e17bca3e17f86df3f80490" kindref="member">SAI_STATUS_FAILURE</ref> when any of the objects fails to remove. When there is failure, Caller is expected to go through the list of returned statuses to find out which fails and which succeeds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="277" column="9" bodyfile="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__SAIROUTE_1gacb11438936d35c5948ffb534c19e5f6f" prot="public" static="no">
        <type>sai_status_t(*</type>
        <definition>typedef sai_status_t(* sai_bulk_set_route_entry_attribute_fn) (_In_ uint32_t object_count, _In_ const sai_route_entry_t *route_entry, _In_ const sai_attribute_t *attr_list, _In_ sai_bulk_op_error_mode_t mode, _Out_ sai_status_t *object_statuses)</definition>
        <argsstring>)(_In_ uint32_t object_count, _In_ const sai_route_entry_t *route_entry, _In_ const sai_attribute_t *attr_list, _In_ sai_bulk_op_error_mode_t mode, _Out_ sai_status_t *object_statuses)</argsstring>
        <name>sai_bulk_set_route_entry_attribute_fn</name>
        <briefdescription>
<para>Bulk set attribute on route entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of objects to set attribute </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">route_entry</parametername>
</parameternamelist>
<parameterdescription>
<para>List of objects to set attribute </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr_list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of attributes to set on objects, one attribute per object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk operation error handling mode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">object_statuses</parametername>
</parameternamelist>
<parameterdescription>
<para>List of status for every object. Caller needs to allocate the buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__SAISTATUS_1gaccbc66056ee29d7f1dc8defdc314cc55" kindref="member">SAI_STATUS_SUCCESS</ref> on success when all objects are removed or <ref refid="group__SAISTATUS_1ga033ca99724e17bca3e17f86df3f80490" kindref="member">SAI_STATUS_FAILURE</ref> when any of the objects fails to remove. When there is failure, Caller is expected to go through the list of returned statuses to find out which fails and which succeeds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="298" column="9" bodyfile="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__SAIROUTE_1gad70167aad9410f4a6ddf4dfa8963ce9c" prot="public" static="no">
        <type>sai_status_t(*</type>
        <definition>typedef sai_status_t(* sai_bulk_get_route_entry_attribute_fn) (_In_ uint32_t object_count, _In_ const sai_route_entry_t *route_entry, _In_ const uint32_t *attr_count, _Inout_ sai_attribute_t **attr_list, _In_ sai_bulk_op_error_mode_t mode, _Out_ sai_status_t *object_statuses)</definition>
        <argsstring>)(_In_ uint32_t object_count, _In_ const sai_route_entry_t *route_entry, _In_ const uint32_t *attr_count, _Inout_ sai_attribute_t **attr_list, _In_ sai_bulk_op_error_mode_t mode, _Out_ sai_status_t *object_statuses)</argsstring>
        <name>sai_bulk_get_route_entry_attribute_fn</name>
        <briefdescription>
<para>Bulk get attribute on route entry. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">object_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of objects to set attribute </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">route_entry</parametername>
</parameternamelist>
<parameterdescription>
<para>List of objects to set attribute </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">attr_count</parametername>
</parameternamelist>
<parameterdescription>
<para>List of attr_count. Caller passes the number of attribute for each object to get </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">attr_list</parametername>
</parameternamelist>
<parameterdescription>
<para>List of attributes to set on objects, one attribute per object </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Bulk operation error handling mode </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">object_statuses</parametername>
</parameternamelist>
<parameterdescription>
<para>List of status for every object. Caller needs to allocate the buffer</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="group__SAISTATUS_1gaccbc66056ee29d7f1dc8defdc314cc55" kindref="member">SAI_STATUS_SUCCESS</ref> on success when all objects are removed or <ref refid="group__SAISTATUS_1ga033ca99724e17bca3e17f86df3f80490" kindref="member">SAI_STATUS_FAILURE</ref> when any of the objects fails to remove. When there is failure, Caller is expected to go through the list of returned statuses to find out which fails and which succeeds. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="322" column="9" bodyfile="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" bodystart="322" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__SAIROUTE_1ga784c8b0c8bceb268ef254b1060d5a46a" prot="public" static="no">
        <type>struct <ref refid="struct__sai__route__api__t" kindref="compound">_sai_route_api_t</ref></type>
        <definition>typedef struct _sai_route_api_t sai_route_api_t</definition>
        <argsstring></argsstring>
        <name>sai_route_api_t</name>
        <briefdescription>
<para>Router entry methods table retrieved with <ref refid="group__SAI_1ga3d199f627b8265366b8481e1c662aaed" kindref="member">sai_api_query()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pnarytnyk/Documents/SAI/inc/sairoute.h" line="345" column="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
